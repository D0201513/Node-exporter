---
- name: Deploy Promtail and Security Scan on Clients
  hosts: Test1
  become: yes
  vars:
    promtail_version: "2.9.2"                     # Promtail version
    promtail_bin_dir: /usr/local/bin
    promtail_config_path: /etc/promtail-config.yml
    loki_url: "http://172.17.9.132:31001/loki/api/v1/push"  # Replace with your Loki URL
    scan_script_path: /usr/local/bin/security_scan.sh
    client_log_path: /tmp/security_scan.log

  tasks:
    # Step 1: Download Promtail
    - name: Download Promtail binary
      get_url:
        url: "https://github.com/grafana/loki/releases/download/v{{ promtail_version }}/promtail-linux-amd64.zip"
        dest: "/tmp/promtail-linux-amd64.zip"
        mode: '0644'

    # Step 2: Unzip Promtail
    - name: Unzip Promtail
      unarchive:
        src: "/tmp/promtail-linux-amd64.zip"
        dest: "/tmp/"
        remote_src: yes

    # Step 3: Move Promtail binary and make executable
    - name: Install Promtail binary
      copy:
        src: "/tmp/promtail-linux-amd64"
        dest: "{{ promtail_bin_dir }}/promtail"
        mode: '0755'
        remote_src: yes

    # Step 4: Create Promtail configuration
    - name: Create Promtail config file
      copy:
        dest: "{{ promtail_config_path }}"
        mode: '0644'
        content: |
          server:
            http_listen_port: 9080
            grpc_listen_port: 0

          positions:
            filename: /tmp/positions.yaml

          clients:
            - url: "{{ loki_url }}"

          scrape_configs:
            - job_name: security_scan_logs
              static_configs:
                - targets:
                    - localhost
                  labels:
                    job: security_scan
                    __path__: "{{ client_log_path }}"

    # Step 5: Deploy security scan script
    - name: Deploy security_scan.sh script
      copy:
        dest: "{{ scan_script_path }}"
        mode: '0755'
        content: |
          #!/bin/bash
          LOGFILE="{{ client_log_path }}"
          echo "===== Security Scan: $(date) =====" > $LOGFILE
          OS_FAMILY=$(awk -F= '/^ID=/{print $2}' /etc/os-release | tr -d '"')

          echo "[MISSING_OS_UPDATES]" >> $LOGFILE
          if [[ "$OS_FAMILY" =~ (ubuntu|debian) ]]; then
            apt list --upgradable 2>/dev/null | grep -i security >> $LOGFILE || echo "No security updates" >> $LOGFILE
          elif [[ "$OS_FAMILY" =~ (rhel|centos|rocky|almalinux) ]]; then
            yum check-update 2>/dev/null | grep -i security >> $LOGFILE || echo "No security updates" >> $LOGFILE
          fi

          echo "[OUTDATED_PACKAGES]" >> $LOGFILE
          if [[ "$OS_FAMILY" =~ (ubuntu|debian) ]]; then
            apt list --upgradable 2>/dev/null >> $LOGFILE || echo "No outdated packages" >> $LOGFILE
          else
            yum check-update 2>/dev/null >> $LOGFILE || echo "No outdated packages" >> $LOGFILE
          fi

          echo "[KERNEL]" >> $LOGFILE
          uname -r >> $LOGFILE

          echo "[VULNERABLE_APPS]" >> $LOGFILE
          if command -v dpkg &>/dev/null; then
            dpkg -l | egrep "apache2|nginx|mysql|php" >> $LOGFILE || echo "No vulnerable apps found" >> $LOGFILE
          elif command -v rpm &>/dev/null; then
            rpm -qa | egrep "httpd|nginx|mysql|php" >> $LOGFILE || echo "No vulnerable apps found" >> $LOGFILE
          fi

          echo "[WEAK_SETTINGS]" >> $LOGFILE
          if [[ -f /etc/security/pwquality.conf ]]; then
            grep -i "minlen" /etc/security/pwquality.conf >> $LOGFILE || echo "minlen not set" >> $LOGFILE
          else
            echo "pwquality.conf not found" >> $LOGFILE
          fi

    # Step 6: Run the security scan
    - name: Execute security scan
      shell: "{{ scan_script_path }}"
      register: scan_result

    - name: Show scan output path
      debug:
        msg: "Security scan log generated at {{ client_log_path }}"

    # Step 7: Start Promtail as background process
    - name: Start Promtail
      shell: "nohup {{ promtail_bin_dir }}/promtail -config.file={{ promtail_config_path }} > /tmp/promtail.log 2>&1 &"
      args:
        executable: /bin/bash
